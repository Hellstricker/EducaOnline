// <auto-generated />
using System;
using EducaOnline.Aluno.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EducaOnline.Aluno.API.Migrations
{
    [DbContext(typeof(AlunoDbContext))]
    partial class AlunoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("EducaOnline.Aluno.API.Models.Aluno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Ra")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Alunos", (string)null);
                });

            modelBuilder.Entity("EducaOnline.Aluno.API.Models.AulaConcluida", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AlunoId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AulaId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.ToTable("AulaConcluidas", (string)null);
                });

            modelBuilder.Entity("EducaOnline.Aluno.API.Models.Certificado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AlunoId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("AlunoId1")
                        .HasColumnType("TEXT");

                    b.Property<string>("Curso")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Numero")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("AlunoId1");

                    b.ToTable("Certificados", (string)null);
                });

            modelBuilder.Entity("EducaOnline.Aluno.API.Models.Matricula", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AlunoId")
                        .HasColumnType("TEXT");

                    b.Property<int>("AulasConcluidas")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CargaHorariaTotal")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CursoNome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataMatricula")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalAulas")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.ToTable("Matriculas", (string)null);
                });

            modelBuilder.Entity("EducaOnline.Aluno.API.Models.Aluno", b =>
                {
                    b.OwnsOne("EducaOnline.Aluno.API.Models.ValueObjects.HistoricoAprendizado", "HistoricoAprendizado", b1 =>
                        {
                            b1.Property<Guid>("AlunoId")
                                .HasColumnType("TEXT");

                            b1.Property<double?>("Progresso")
                                .HasColumnType("REAL");

                            b1.Property<int?>("TotalAulas")
                                .HasColumnType("INTEGER");

                            b1.Property<int?>("TotalAulasConcluidas")
                                .HasColumnType("INTEGER");

                            b1.HasKey("AlunoId");

                            b1.ToTable("Alunos");

                            b1.WithOwner()
                                .HasForeignKey("AlunoId");
                        });

                    b.Navigation("HistoricoAprendizado")
                        .IsRequired();
                });

            modelBuilder.Entity("EducaOnline.Aluno.API.Models.AulaConcluida", b =>
                {
                    b.HasOne("EducaOnline.Aluno.API.Models.Aluno", "Aluno")
                        .WithMany("AulasConcluidas")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");
                });

            modelBuilder.Entity("EducaOnline.Aluno.API.Models.Certificado", b =>
                {
                    b.HasOne("EducaOnline.Aluno.API.Models.Aluno", null)
                        .WithMany("Certificados")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EducaOnline.Aluno.API.Models.Aluno", "Aluno")
                        .WithMany()
                        .HasForeignKey("AlunoId1");

                    b.Navigation("Aluno");
                });

            modelBuilder.Entity("EducaOnline.Aluno.API.Models.Matricula", b =>
                {
                    b.HasOne("EducaOnline.Aluno.API.Models.Aluno", "Aluno")
                        .WithMany("Matriculas")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Aluno");
                });

            modelBuilder.Entity("EducaOnline.Aluno.API.Models.Aluno", b =>
                {
                    b.Navigation("AulasConcluidas");

                    b.Navigation("Certificados");

                    b.Navigation("Matriculas");
                });
#pragma warning restore 612, 618
        }
    }
}
